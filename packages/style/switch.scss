@use './tools/fns' as *;
@use './tools/size' as size;

@mixin s-size() {
  &[data-size=small] {
    @include css-var(switch-height, 20px);
  }
  &[data-size=normal] {
    @include css-var(switch-height, 25px);
  }
  &[data-size=large] {
    @include css-var(switch-height, 30px);
  }
  &[data-size=xlarge] {
    @include css-var(switch-height, 35px);
  }
}

@include c(switch) {
  @include css-var(switch-off-color, get-css(color, white--4));
  --size: calc(#{get-css(switch, height)} - 4px);
  align-items: center;
  background-color: get-css(switch, off-color);
  border-radius: 100px;
  display: inline-flex;
  height: get-css(switch, height);
  justify-content: end;
  min-width: calc(#{get-css(switch, height)} * 1.75);
  outline: transparent solid 1px;

  &:hover:not([data-disabled]) {
    outline-color: get-css(switch, on-color);
  }

  & > .action {
    align-items: center;
    background-color: get-css(color, white);
    border-radius: 100px;
    color: get-css(switch, off-color);
    display: flex;
    font-size: 0.8em;
    height: var(--size);
    justify-content: center;
    left: 2px;
    overflow: hidden;
    position: absolute;
    top: 2px;
    transition: all 0.3s ease-out;
    -moz-user-select: none;
    -ms-user-select: none;
    -webkit-user-select: none;
    user-select: none;
    width: var(--size);
  }

  @include s-size;

  &[data-on] {
    background-color: get-css(switch, on-color);

    &:hover {
      outline-color: get-css(switch, off-color);
    }

    & > .action {
      color: get-css(switch, on-color);
      left: calc(100% - 2px - var(--size));
    }
  }

}

@include dark-theme {
  @include c(switch) {
    @include css-var(switch-off-color, get-css(color, black-4));
  }
}
