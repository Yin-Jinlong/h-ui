@use './var' as *;
@use './tools/fns' as *;
@use './tools/prefix' as *;
@use './tools/style' as *;
@use './tools/size' as size;
@use './theme/light' as theme;

* {
  margin: 0;
  padding: 0;
}

// 动画过度类

.transition-all, [data-transition] {
  transition: all 0.3s ease-out;
}

.transition-all-fast, [data-transition-fast] {
  transition: all 0.2s ease-out;
}

.transition-all-slow, [data-transition-slow] {
  transition: all 0.4s ease-out;
}

// 尺寸类

[data-fill-width] {
  width: 100%;
}

[data-fill-height] {
  height: 100%;
}

[data-fill-size] {
  @include size.fill;
}

// 光标类

[data-pointer] {
  cursor: pointer;
}

[data-none-select] {
  @include css-prefix(user-select, none);
}

// 布局类

[data-flex] {
  display: flex;
}

[data-flex-column] {
  display: flex;
  flex-direction: column;
}

[data-flex-column-center] {
  align-items: center;
  display: flex;
  flex-direction: column;
  justify-content: center;
}

[data-flex-center] {
  align-items: center;
  display: flex;
  justify-content: center;
}

[data-relative] {
  position: relative;
}

[data-absolute] {
  left: 0;
  position: absolute;
  top: 0;
}

// 显示类

[data-empty-hide]:empty {
  display: none;
}

[data-break-line] {
  white-space: break-spaces;
  word-break: break-word;
}

[data-disabled] {
  @include disabled;
}

@mixin color-adds($name,$base,$count:9,$v:5%) {
  @for $i from 1 to $count+1 {
    @include css-var(color-#{$name}-#{$i}, color-addL($base, $i * $v, 95%));
  }
}

@mixin color-subs($name,$base,$count:9,$v:5%) {
  @for $i from 1 to $count+1 {
    @include css-var(color-#{$name}--#{$i}, color-subL($base, $i * $v, 5%));
  }
}

:root {
  @each $name, $color in $colors {
    @include css-var(color-#{$name}, $color);
    @include color-adds($name, $color);
    @include color-subs($name, $color);
  }

  @each $name, $color in $light-colors {
    @include css-var(color-#{$name}, $color);
    @include color-subs($name, $color);
  }

  @each $name, $color in $dark-colors {
    @include css-var(color-#{$name}, $color);
    @include color-adds($name, $color);
  }

  @each $name, $size in $paddings {
    @include css-var(padding-#{$name}, $size);
  }

  @each $name, $size in $radius {
    @include css-var(radius-#{$name}, $size);
  }

  @include theme.background;
  @include theme.text;
  @include theme.border;

}

body {
  background: get-css(color, background-simple);
  color: get-css(color, text);
  transition-duration: 0.2s;
  transition-property: background-color, color;
  transition-timing-function: ease-out;
}
